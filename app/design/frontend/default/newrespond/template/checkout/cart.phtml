<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_modern
 * @copyright   Copyright (c) 2011 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Shopping cart template
 *
 * @see Mage_Checkout_Block_Cart
 */
?>
<?php



if(!function_exists('getsmogipoints'))
{
    function getsmogipoints() {

        $customerId = Mage::getModel('customer/session')->getCustomerId();
        $store_id = Mage::app()->getStore()->getId();

        /*
            if (Mage::getStoreConfig('rewardpoints/default/flatstats', $store_id)){
                $reward_flat_model = Mage::getModel('rewardpoints/flatstats');
                return $reward_flat_model->collectPointsCurrent($customerId, $store_id);
            }
          */

        //$reward_model = Mage::getModel('rewardpoints/stats');
        //return $reward_model->getPointsCurrent($customerId, $store_id);

        return Mage::getModel('rewardpoints/stats')->getPointsCurrent($customerId, $store_id);
    }
}

if(!function_exists('activategiftcard'))
{
    function activategiftcard()
    {
        //make giftcard active
        //if(!Mage::getSingleton('core/session')->getGiftCardActivated())
//            {
        if(Mage::helper('giftcards')->getCustomerBalance(Mage::getSingleton('customer/session')->getCustomer()->getId()) > 0)
        {
            if(Mage::getSingleton('giftcards/session')->getActive() == "0" || Mage::getSingleton('giftcards/session')->getActive() == "")
            {
                Mage::getSingleton('core/session')->setGiftCardActivated('true');
                Mage::getSingleton('giftcards/session')->setActive('1');
                Mage::getSingleton('checkout/cart')->getQuote()->getShippingAddress()->setCollectShippingRates(true);
                Mage::getSingleton('checkout/cart')->getQuote()->collectTotals()->save();
                Mage::app()->getFrontController()->getResponse()->setRedirect(Mage::helper('core/url')->getHomeUrl()."checkout/cart");
            }
        }
        //}

        //deactivate smogi bucks
        Mage::getSingleton('rewardpoints/session')->setProductChecked(0);
        Mage::helper('rewardpoints/event')->setCreditPoints(0);
        Mage::helper('checkout/cart')->getCart()->getQuote()
            ->setRewardpointsQuantity(NULL)
            ->setRewardpointsDescription(NULL)
            ->setBaseRewardpoints(NULL)
            ->setRewardpoints(NULL)
            ->save();
    }
}

if(!function_exists('activatesmogibucks'))
{
    function activatesmogibucks()
    {
        //activate smogi bucks

        $session = Mage::getSingleton('core/session');
        $points_value = getsmogipoints();
        if (Mage::getStoreConfig('rewardpoints/default/max_point_used_order', Mage::app()->getStore()->getId())){
            if ((int)Mage::getStoreConfig('rewardpoints/default/max_point_used_order', Mage::app()->getStore()->getId()) < $points_value){
                $points_max = (int)Mage::getStoreConfig('rewardpoints/default/max_point_used_order', Mage::app()->getStore()->getId());
                $session->addError($this->__('You tried to use %s loyalty points, but you can use a maximum of %s points per shopping cart.', $points_value, $points_max));
                $points_value = $points_max;
            }
        }
        $quote_id = Mage::helper('checkout/cart')->getCart()->getQuote()->getId();

        Mage::getSingleton('rewardpoints/session')->setProductChecked(0);
        Mage::getSingleton('rewardpoints/session')->setShippingChecked(0);

        Mage::helper('rewardpoints/event')->setCreditPoints($points_value);


        Mage::helper('checkout/cart')->getCart()->getQuote()
            ->setRewardpointsQuantity($points_value)
            ->save();

        //deactivate gift card

        Mage::getSingleton('giftcards/session')->setActive('0');
        try {
            Mage::getSingleton('checkout/cart')->getQuote()->getShippingAddress()->setCollectShippingRates(true);
            Mage::getSingleton('checkout/cart')->getQuote()->collectTotals()->save();
        } catch (Exception $e) {
            //$this->_getSession()->addError($e->getMessage());
        }
    }
}
//custom auto smogi bucks apply
//$isAutoAppliedDiscount = false ;
//echo Mage::getSingleton('core/session')->getAutoAppliedDiscount();
//echo  Mage::getSingleton('core/session')->getsmogiApplied();die('ttt');
//Mage::getSingleton('core/session')->setAutoAppliedDiscount($isAutoAppliedDiscount);
if(!(Mage::getSingleton('core/session')->getAutoAppliedDiscount()))
{
    $smogiBalance = getsmogipoints();
    if(($smogiBalance > 0)&&(Mage::getSingleton('core/session')->getsmogiApplied() == 0))
    {
        activatesmogibucks();
        $isAutoAppliedDiscount = 1 ;
        Mage::getSingleton('core/session')->setAutoAppliedDiscount($isAutoAppliedDiscount);
        Mage::getSingleton('core/session')->setsmogiApplied(1);
        Mage::app()->getFrontController()->getResponse()->setRedirect($this->getUrl('checkout/cart'));
    }
    /* apply Gift of YS automatically
    else
    {
        if(Mage::getSingleton('core/session')->getsmogiApplied() == 0)
        {
            if(Mage::helper('customer')->isLoggedIn())
            {
                if(!Mage::getSingleton('core/session')->getGiftCardActivated())
                {
                    if(Mage::helper('giftcards')->getCustomerBalance(Mage::getSingleton('customer/session')->getCustomer()->getId()) > 0)
                    {
                        if(Mage::getSingleton('giftcards/session')->getActive() == "0" || Mage::getSingleton('giftcards/session')->getActive() == "")
                        {
                            Mage::getSingleton('core/session')->setGiftCardActivated('true');
                            Mage::getSingleton('giftcards/session')->setActive('1');
                            Mage::getSingleton('checkout/cart')->getQuote()->getShippingAddress()->setCollectShippingRates(true);
                            Mage::getSingleton('checkout/cart')->getQuote()->collectTotals()->save();
                            Mage::app()->getFrontController()->getResponse()->setRedirect(Mage::helper('core/url')->getHomeUrl()."checkout/cart");
                        }
                    }
                }
            }
        }
        $isAutoAppliedDiscount = 1 ;
        Mage::getSingleton('core/session')->setAutoAppliedDiscount($isAutoAppliedDiscount);
        Mage::app()->getFrontController()->getResponse()->setRedirect($this->getUrl('checkout/cart'));
    }
    */
}

//end--custom auto smogi bucks apply
?>


<div class="cart">
	<div class="page-title">
    	<h1>Shopping Bag</h1>
    </div>
    <?php echo $this->getChildHtml('form_before') ?>
    <?php echo $this->getMessagesBlock()->getGroupedHtml() ?>
    <?php /* if(!$this->hasError()): ?>
        <ul class="checkout-types">
        <?php foreach ($this->getMethods('methods') as $method): ?>
            <?php $methodHtml = $this->getMethodHtml($method); ?>
            <?php if ($methodHtml): ?>
            <li><?php echo $methodHtml; ?></li>
            <?php endif; ?>
        <?php endforeach; ?>
        </ul>
    <?php endif; */ ?>
    <form action="<?php echo $this->getUrl('checkout/cart/updatePost') ?>" method="post">
        <fieldset>
            <table id="shopping-cart-table" class="data-table cart-table">
                <tfoot>
                    <tr>
                        <td colspan="2" class="">
                            <button type="submit" name="update_cart_action" value="update_qty" title="<?php echo $this->__('Update'); ?>" class="button btn-update"><?php echo $this->__('Update'); ?></button>
                            <!--<button type="submit" name="update_cart_action" value="empty_cart" title="<?php echo $this->__('Clear Shopping Cart'); ?>" class="button btn-update" id="empty_cart_button"><?php echo $this->__('Clear Shopping Cart'); ?></button>-->
                        </td>
                    </tr>
                </tfoot>
                <tbody>
                <?php foreach($this->getItems() as $_item): ?>
                    <?php echo $this->getItemHtml($_item) ?>
                <?php endforeach ?>
                </tbody>
            </table>
        </fieldset>
    </form>
    <div class="cart-collaterals">
            <div class="collat-wrap">
            	<?php  echo $this->getChildHtml('giftcards') ?>
                <?php  echo $this->getChildHtml('coupon') ?>
                <?php // if (!$this->getIsVirtual()): echo $this->getChildHtml('shipping'); endif; ?>
                <div class="totals">
                    <?php echo $this->getChildHtml('totals'); ?>
                    <?php if(!$this->hasError()){ ?>
                    <ul class="checkout-types">
                    <?php foreach ($this->getMethods('methods') as $method): ?>
                        <?php if ($methodHtml = $this->getMethodHtml($method)): ?>
                        <li><?php echo $methodHtml; ?></li>
                        <?php endif; ?>
                    <?php endforeach; ?>
                    </ul>
                    <?php } else {
                        ?>
                        <ul class="checkout-types">
                            <li>
                            <button type="button" title="<?php echo $this->__('Proceed to Checkout') ?>" class="button btn-proceed-checkout btn-checkout-disable"><span><span><?php echo $this->__('Continue Checkout') ?></span></span></button>
                            <div id="outofstock" class="errortext"><?php echo html_entity_decode(strip_tags(Mage::getSingleton('core/session')->getGlobalMessage())); ?></div>
                            </li>
                        </ul>
                        <script type="text/javascript">
                            $j(document).ready(function(){
                                $j("p.item-msg.error:contains('* Some of the products are currently out of stock')").hide();
                            });
                        </script>
                        <?php
                    } ?>
                </div>
            </div>
			<div class="crosssell-wrap">
                <?php echo $this->getChildHtml('crosssell') ?>
            </div>
    </div>
</div>
