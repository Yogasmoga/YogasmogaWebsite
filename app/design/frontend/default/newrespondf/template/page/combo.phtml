<?php
$storeId = Mage::app()->getStore()->getStoreId();
$catId = Mage::getModel('catalog/layer')->getCurrentCategory()->getId();
$_helper = Mage::helper('catalog/output');

$productCollection = Mage::getModel('catalog/category')->load($catId)
    ->getProductCollection()
    ->addAttributeToSelect('*');

$cities = array();
$latlongs = array();
$cityTimes = array();

$resourceModel = Mage::getResourceModel('catalog/product');

/***************** get all colors from database ***********************/
$allColors = array();
$allColorAttribute = Mage::getModel('eav/config')->getAttribute('catalog_product', 'color'); //here, "color" is the attribute_code
$allColorOptions = $allColorAttribute->getSource()->getAllOptions(true, true);
foreach ($allColorOptions as $instance) {
    if (!array_key_exists($instance['value'], $allColors)) {
        $allColors[$instance['value']] = $instance['label'];
    }
}
/***************** get all sizes from database ***********************/
$allSizes = array();
$allSizeAttribute = Mage::getModel('eav/config')->getAttribute('catalog_product', 'size'); //here, "color" is the attribute_code
$allSizeOptions = $allSizeAttribute->getSource()->getAllOptions(true, true);
foreach ($allSizeOptions as $instance) {
    if ($instance['label'] != "") {
        if (is_numeric($instance['label']) && intval($instance['label']) > 12)
            continue;

        if (strpos(strtoupper($instance['label']), "T") !== false)
            continue;

        $allSizes[$instance['label']] = $instance['value'];
    }
}
?>
<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_iphone
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Template for Mage_Page_Block_Html
 */
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <?php echo $this->getChildHtml('head') ?>
</head>
<body bgcolor="#FFFFFF" marginwidth="0" marginheight="0" topmargin="0"
      leftmargin="0" <?php echo $this->getBodyClass() ? ' class="' . $this->getBodyClass() . '"' : '' ?>
      onload="setTimeout(scrollTo, 0, 0, 1)">
<div class="wrapper">
    <div class="page">
        <?php echo $this->getChildHtml('after_body_start') ?>
        <?php echo $this->getChildHtml('global_notices') ?>
        <div class="header-container">
            <div class="header">
                <?php echo $this->getChildHtml('header') ?>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="main-container">
            <?php echo $this->getChildHtml('global_messages') ?>
            <?php echo $this->getChildHtml('content') ?>
        </div>
        <div class="pageThumbnail table">
            <div class="table-cell">
                <h1 class="page-title">#YSWANDERLAND</h1>

                <p>Giftsets inspired by cities that inspire us.</p>
            </div>
        </div>
        <div class="gift-sets-collection">

            <?php

            $arBundledProductImages = array();

            foreach ($productCollection as $_product_single) {
            $_product = Mage::getModel('catalog/product')->load($_product_single->getId());
            $setProductUrl = $_product->getProductUrl();

            $_childProducts = Mage::getModel('catalog/product_type_configurable')->getUsedProducts(null, $_product_single);
            foreach ($_childProducts as $simple) {
                $stock = Mage::getModel('cataloginventory/stock_item')->loadByProduct($simple)->getQty();
                break;
            }

            $bundled_product_ids = $resourceModel->getAttributeRawValue($_product->getId(), 'bundle_products', $storeId);

            if (isset($bundled_product_ids))
                $bundled_product_ids = trim($bundled_product_ids);

            $ar_bundled_product_ids = explode(",", $bundled_product_ids);

            $ar_bundle_sizes = array();

            /************ get color code of configurable product **************/
            $productAttributeOptions = $_product->getTypeInstance(true)->getConfigurableAttributesAsArray($_product);
            foreach ($productAttributeOptions as $productAttribute) {
                foreach ($productAttribute['values'] as $attribute) {
                    if ($productAttribute['label'] == 'Color') {
                        $gift_simple_color = $attribute['value_index'];
                        break;
                    }
                }
            }
            /************ get color code of configurable product **************/

            $gift_simple_id = $_product_single->getId();
            $gift_bundle_count = count($ar_bundled_product_ids);

            for ($i = 0; $i < count($ar_bundled_product_ids); $i++) {

                $ar_id_color_code = explode(":", $ar_bundled_product_ids[$i]);          // id:color_code

                $bundle_configurable_id = $ar_id_color_code[0];
                $bundle_color_id = $ar_id_color_code[1];

                $_bundle_product = Mage::getModel('catalog/product')->load(intval($bundle_configurable_id));
                $bundledProductUrl = $_bundle_product->getProductUrl() . '?color=' . $bundle_color_id;

                $_gallery = Mage::getModel('catalog/product')->load($_bundle_product->getId())->getMediaGalleryImages();

                $bundle_product_images = array();

                if (isset($_gallery)) {
                    foreach ($_gallery as $_image) {
                        $imageLabelData = json_decode(trim($_image->getLabel()), true);

                        if ($imageLabelData == NULL || strcasecmp($imageLabelData['type'], "product image") != 0)
                            continue;

                        if ($imageLabelData['color'] == $ar_id_color_code[1]) {
                            $big_image = (string)Mage::helper('adaptiveResize/image')->init($_bundle_product, 'thumbnail', $_image->getFile())->setCropPosition('top')->adaptiveResize(500);
                            //$bundle_product_images[] = $url;
                            break;
                        }
                    }
                }

                $_childProducts = Mage::getModel('catalog/product_type_configurable')->getUsedProducts(null, $_bundle_product);
                $ar_child_sizes = array();
                foreach ($_childProducts as $_childProduct) {
                    $size = $_childProduct->getAttributeText('size');

                    if (is_numeric($size) && intval($size) > 12)
                        continue;

                    if (strpos(strtoupper($size), "T") !== false)
                        continue;

                    if (is_numeric($size))
                        $ar_child_sizes[] = intval($size);
                    else
                        $ar_child_sizes[] = $size;
                }

                $ar_child_sizes = array_unique($ar_child_sizes);
                ksort($ar_child_sizes);

                $ar_bundle_sizes[$i] = array(
                    "product_name" => $_bundle_product->getName(),
                    "product_id" => $_bundle_product->getId(),
                    "price" => round($_bundle_product->getPrice(), 2),
                    "sizes" => $ar_child_sizes,
                    "big_image" => $big_image,
                    //"images" => $bundle_product_images,
                    "color" => $allColors[$bundle_color_id],
                    "color_code" => $bundle_color_id,
                    "url" => $bundledProductUrl
                );

                $arBundledProductImages[$_bundle_product->getId()] = array("small_image" => $small_image, "big_image" => $big_image);
            }
                $person= "";
            // main set images
            $_gallery = Mage::getModel('catalog/product')->load($_product->getId())->getMediaGalleryImages();
            if (isset($_gallery)) {
                foreach ($_gallery as $_image) {
                    $imageLabelData = json_decode(trim($_image->getLabel()), true);
                    /*$city = $imageLabelData["city"];
                    $latlong = $imageLabelData["latlong"];
                    $cityTime = $imageLabelData["cityTime"];

                    $cities[] = $city;
                    $latlongs[] = $latlong;
                    $cityTimes[] = $cityTime;*/
                    $person = $imageLabelData['person'];
                    break;                    // we want to read first image only
                }
            }

            ?>

            <div class="gift-set" data-filter="<?php echo $person; ?>">
                <div class="gift-set-title"><?php echo $_product->getName(); ?> SET</div>
                <p class="left_item"><?php echo round($stock, 0); ?> remaining</p>
                <div class="thumbnail">
                    <span class="setPrice">$<?php echo round($_product->getPrice(), 0); ?></span>

                    <p>Buy Now <span>&gt;</span></p>
                </div>
                <div class="details">

                    <p class="desc">
                        <?php echo $_product->getDescription(); ?>
                    </p>

                    <div class="flexslider">
                        <ul class="slides">

                            <?php
                            for ($x = 0; $x < count($ar_bundle_sizes); $x++) {

                            $bundle = $ar_bundle_sizes[$x];
                            ?>

                            <li rel="product_<?php echo ($x+1);?>_details" rel="<?php echo $bundle['product_id']; ?>">
                                <img src="<?php echo $bundle['big_image']; ?>"/>
                            </li>

                            <?php } ?>
                        </ul>
                    </div>
                    <div class="related_blocks">
                        <?php
                            $ct = 0;
                            $totalProducts = count($ar_bundle_sizes);
                            foreach ($ar_bundle_sizes as $data) {
                                ++$ct;
                        ?>

                        <div class="product_<?php echo $ct;?>_details">
                            <p class="product_name"><?php echo $data["product_name"]; ?> <span><?php echo $ct;?> of <?php echo $totalProducts;?> Products</span></p>

                            <p class="product_color"><?php echo $data["color"]; ?></p>
                            <p class="sold_indidually">
                                <a href="<?php echo $data['url']; ?>">$1000 Sold Individually</a>
                            </p>
                            <div class="size_selection_box">
                                <p>Choose Size <span class="size_chart_link">Size Chart</span></p>

                                <div class="sizes">
                                    <?php
                                    foreach ($allSizes as $key => $value) {
                                        foreach ($data["sizes"] as $size) {

                                            if ($size == $key) {
                                    ?>

                                                <span class="size size-<?php echo $sizeDivCount; ?>"
                                                      rel="<?php echo $value; ?>"><?php echo $key; ?></span>

                                    <?php
                                            }
                                        }
                                    }
                                    ?>
                                </div>
                            </div>
                            <div class="bra_cup_selection">
                                <p>Include bra cup? <span class="bra_cup_toggle"><span class="no selected"></span><span
                                            class="yes"></span></span></p>
                            </div>

                        </div>

                        <?php } ?>

                    </div>


                    <div class="row">
                        <p class="error-text"></p>
                        <div class="add_to_wishlist">
                            <svg height="44px" width="44px" xml:space="preserve"
                                 style="enable-background:new 0 0 44 44;" viewBox="0 0 44 44" y="0px" x="0px"
                                 xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg"
                                 id="Layer_1" version="1.1">
                                <path d="M21.9,35.4L34,19.8c0.8-1.1,1.2-2.4,1.2-3.8c0-3.7-3-6.6-6.6-6.6c-3.7,0-6.6,3-6.6,6.6c0-3.7-3-6.6-6.6-6.6
                                c-3.7,0-6.6,3-6.6,6.6c0,1.4,0.5,2.7,1.2,3.8L21.9,35.4z" fill="#fff"/>
                                </svg>
                        </div>
                        <div class="add_to_shopping_bag">ADD TO BAG</div>
                        <div class="choose_next">CHOOSE NEXT</div>
                    </div>

                    <p class="free_shipping_text">
                        Free and fast shipping to US &amp; Canada
                    </p>
                </div>
            </div>

            <?php } ?>

        </div>

        <span class="close_icon">
            <svg xml:space="preserve" enable-background="new 0 0 44 44"
                viewBox="0 0 44 44" height="44px" width="44px" y="0px"
                x="0px" xmlns:xlink="http://www.w3.org/1999/xlink"
                xmlns="http://www.w3.org/2000/svg" id="Layer_1"
                version="1.1"><g>
                <rect height="44" width="44" fill="#555555"/>
                <line y2="30" x2="30" y1="14" x1="14" stroke-miterlimit="10" stroke="#FFFFFF" fill="none"/>
                <line y2="30" x2="14" y1="14" x1="30" stroke-miterlimit="10" stroke="#FFFFFF" fill="none"/>
                </g>
            </svg>
        </span>

        <div class="footer-container">
            <div class="footer">
                <?php echo $this->getChildHtml('footer') ?>
            </div>
        </div>
        <?php echo $this->getChildHtml('before_body_end') ?>
        <?php echo $this->getAbsoluteFooter() ?>
    </div>
</div>
<script type="text/javascript">
    (function($){
        $(document).ready(function(){
            $(".sign-in-box h1").html("8 GIFT SETS");
        })
    }(jQuery));
</script>

</body>
</html>
